-------- Java ----- Do your best to think and work on following
Exercise 1: refer to com.svit.java.l3.ExceptionExercise Design your own Exception class, which can print your exception message. Then write a code to throw your own Exception and apply Try/Catch blocks

----- Algorithm----- Please practice following algorithms via leetcode and/or eclipse with input example 
Pow(x, n) (m)
	Implement pow(x, n) in iterative(todo) and recursive ways(demo)
	
	
Sqrt(x)
	Description
	Implement int sqrt(int x)
	Compute and return the square root of x

	Example
	sqrt(3) = 1
	sqrt(4) = 2
	sqrt(5) = 2
	sqrt(10) = 3


Sqrt(x) II
	Description
	Implement double sqrt(double x) and x >= 0.
	Compute and return the square root of x.
	
	Example
	Given n = 2 return 1.41421356
		
Power of Two
	Description
	Given an integer, write a function to determine if it is a power of two.		
	
Count Numbers with Unique Digits
	Description
	Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x < 10^n.	
	
	Example
	Given n = 2, return 91. (The answer should be the total numbers in the range of 0 ≤ x < 100, excluding [11,22,33,44,55,66,77,88,99])
	

Closest to Zero
	return the number from int array that is closest to zero. If there are two equally close to zero elements like 2 and -2, consider the positive element
  	to be "closer" to zero. 1. loop through array elements and fetch min diff with 0 2. return the value in that index	